// Generated by CoffeeScript 1.6.3
/* modules/twoside
# make modules can be used on both server side and client side.
*/


(function() {
  (function() {
    var inBrowser, normalize, root, twoside;
    root = null;
    inBrowser = function() {
      return typeof window === 'object' && typeof exports !== 'object';
    };
    if (inBrowser()) {
      root = this;
      if (root.exports === void 0) {
        root.exports = null;
      }
      if (root.module === void 0) {
        root.module = null;
      }
      twoside = root.twoside = {
        _modules: {}
      };
      /* To make node.js happy, we can alias some external module.*/

      twoside.alias = function(path, object) {
        return twoside._modules[path] = {
          exports: object
        };
      };
      /* e.g. n browser, if underscore have been imported before, we can alias it like below:*/

      normalize = function(path) {
        var head, target, token, _i, _len, _ref;
        if (!path || path === '/') {
          return '/';
        }
        target = [];
        _ref = path.split('/');
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          token = _ref[_i];
          if (token === '..') {
            target.pop();
          } else if (token !== '' && token !== '.') {
            target.push(token);
          }
        }
        /* for IE 6 & 7 - use path.charAt(i), not path[i]*/

        head = path.charAt(0) === '/' || path.charAt(0) === '.' ? '/' : '';
        return head + target.join('/').replace(/[\/]{2,}/g, '/');
      };
      return root.require = function(twosidePath) {
        if (twosidePath.slice(twosidePath.length - 7) !== 'twoside') {
          return root.oldRequire(twosidePath);
        }
        return function(path, _, __, define) {
          var exports, module, modulePath, require;
          path = normalize(path);
          exports = {};
          module = twoside._modules[path] = {
            exports: exports
          };
          modulePath = path.slice(0, path.lastIndexOf("/") + 1);
          require = function(path) {
            if (path[0] === '.') {
              path = normalize(modulePath + path);
            }
            module = twoside._modules[path];
            if (!module) {
              throw path + ' is undefined.';
            }
            return module.exports;
          };
          return define(require, exports, module);
        };
      };
    } else {
      return module.exports = function(path, exports, module, define) {
        return define(require, exports, module);
      };
    }
  }).call(this);

  /* javascript sample
  require('./twoside')('/browsersample', exports, module, function(require, exports, module){
    // wrapped module definition
  });
  */


}).call(this);

/*
//@ sourceMappingURL=twoside.map
*/
